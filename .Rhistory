I1 = inla(m1, family = 'gamma', data=j, control.compute = list(dic = T, waic = T),
control.family = list(link = 'log',
hyper = list(prec = list( prior = 'loggamma', param = c(1, 0.5)))))
m1 <- totwgt_sd ~ yr.sd + lat + lon
I1 = inla(m1, family = 'gamma', data=j, control.compute = list(dic = T, waic = T),
control.family = list(link = 'log',
hyper = list(prec = list( prior = 'loggamma', param = c(1, 0.5)))))
I1 = inla(m1, family = 'gamma', data = j, control.compute = list(dic = T, waic = T),
control.family = list(link = 'log',
hyper = list(prec = list( prior = 'loggamma', param = c(1, 0.5)))))
m1 <- totwgt_sd ~ yr.sd + lat + lon
I1 = inla(m1, family = 'gamma', data = j)
m1 <- totwgt_sd ~ 1 + yr.sd + lat + lon
I1 = inla(m1, family = 'gamma', data = j)
I1 = inla(m1, family = 'poisson', data = j, control.precictor = list(compute = T))
I1 = inla(m1, family = 'poisson', data = j, control.predictor = list(compute = T))
fit1 <- I1$summary.fitted.values[, "mean"]
E1 <- (j$totwgt_sd - fit1 / sqrt(fit1))
sum(E1^2)/ (nrow(j) -2)
MyMultipanel.ggp2(Z = LP,
varx = myvar,
vary = "E1",
ylab = "Pearson residuals",
addSmoother = T,
addRegressionLine = F,
addHorizontalLine = T)
load("C:/Michelle/Documents/Library/Courses/DLMM_Zuur/AllRCode_V3/AllRCode/HighstatLibV10.R")
MyMultipanel.ggp2(Z = LP,
varx = myvar,
vary = "E1",
ylab = "Pearson residuals",
addSmoother = T,
addRegressionLine = F,
addHorizontalLine = T)
source("HighstatLibV10.R")
source("HighstatLibV10.R")
source("HighstatLibV10.R", file = "C:/ss/R")
source("HighstatLibV10.R", file = "C:/ss/R", local = T)
setwd("C:/ss/R")
source("HighstatLibV10.R")
MyMultipanel.ggp2(Z = LP,
varx = myvar,
vary = "E1",
ylab = "Pearson residuals",
addSmoother = T,
addRegressionLine = F,
addHorizontalLine = T)
myvar <- c("yr.sd", "lat", "lon")
MyMultipanel.ggp2(Z = LP,
varx = myvar,
vary = "E1",
ylab = "Pearson residuals",
addSmoother = T,
addRegressionLine = F,
addHorizontalLine = T)
LP$E1 <- E1
myvar <- c("yr.sd", "lat", "lon")
MyMultipanel.ggp2(Z = LP,
varx = myvar,
vary = "E1",
ylab = "Pearson residuals",
addSmoother = T,
addRegressionLine = F,
addHorizontalLine = T)
LP$E1 <- E1
j$E1 <- E1
myvar <- c("yr.sd", "lat", "lon")
MyMultipanel.ggp2(Z = j,
varx = myvar,
vary = "E1",
ylab = "Pearson residuals",
addSmoother = T,
addRegressionLine = F,
addHorizontalLine = T)
colSums(is.na(j))
j %>% group_by(yr) %>% summarise_each(funs(sum(.==0)))
library(dplyr)
j %>% group_by(yr) %>% summarise_each(funs(sum(.==0)))
plot(j$totwgt_sd)
plot(log(j$totwgt_sd))
nrow(j)
j %>% summarise_each(funs(sum(.==0)))
11511/13018
j = j[which(j$totwgt_sd != 0), ]
plot(j$totwgt_sd)
range(j$totwgt_sd)
I1 = inla(m1, family = 'gamma', data = j, control.compute = list(dic = T, waic = T))
fit1 <- I1$summary.fitted.values[, "mean"]
E1 <- (j$totwgt_sd - fit1 / sqrt(fit1))
sum(E1^2)/ (nrow(j) -2)
j$E1 <- E1
myvar <- c("yr.sd", "lat", "lon")
MyMultipanel.ggp2(Z = j,
varx = myvar,
vary = "E1",
ylab = "Pearson residuals",
addSmoother = T,
addRegressionLine = F,
addHorizontalLine = T)
I1 = inla(m1, family = 'gamma', data = j, control.compute = list(dic = T, waic = T), control.family = list(link = 'log'))
fit1 <- I1$summary.fitted.values[, "mean"]
E1 <- (j$totwgt_sd - fit1 / sqrt(fit1))
sum(E1^2)/ (nrow(j) -2)
j$E1 <- E1
myvar <- c("yr.sd", "lat", "lon")
MyMultipanel.ggp2(Z = j,
varx = myvar,
vary = "E1",
ylab = "Pearson residuals",
addSmoother = T,
addRegressionLine = F,
addHorizontalLine = T)
Il
I1
I1 = inla(m1, family = 'gamma', data = j, control.compute = list(dic = T, waic = T),
control.family = list(link = 'log'), hyper = list(prec = list(prior = 'loggamma', param = c(1, 0.5))))
I1 = inla(m1, family = 'gamma', data = j, control.compute = list(dic = T, waic = T),
control.family = list(link = 'log', hyper = list(prec = list(prior = 'loggamma', param = c(1, 0.5)))))
fit1 <- I1$summary.fitted.values[, "mean"]
E1 <- (j$totwgt_sd - fit1 / sqrt(fit1))
sum(E1^2)/ (nrow(j) -2)
j$E1 <- E1
myvar <- c("yr.sd", "lat", "lon")
MyMultipanel.ggp2(Z = j,
varx = myvar,
vary = "E1",
ylab = "Pearson residuals",
addSmoother = T,
addRegressionLine = F,
addHorizontalLine = T)
mu <- I1$summary.fitted.values[, "mean"]
phi <- I1$summary.hyperpar[, "mean"]
vary <- mu^2 /phi
E1 <- (j$totwgt_sd - mu / sqrt(vary))
j$E1 <- E1
myvar <- c("yr.sd", "lat", "lon")
MyMultipanel.ggp2 (Z = j,
varx = myvar,
vary = 'E1',
ylab = 'Pearson residuals',
addSmoother = T,
addRegressionLine = F,
addHorizontalLine = T)
p$internal.crs
j.cnew <- spTransform(j.cords, p$internal.crs)
j.cords <- j[, c("lon", "lat")]
j.cnew <- spTransform(j.cords, p$internal.crs)
library('rgdal')
j.cnew <- spTransform(j.cords, p$internal.crs)
j.cnew <- spTransform(j.cords, p$internal.crs)
coordinates(j) <- c('lon', 'lat')
proj4string(j) <- CRS(p$geog.proj)
j = j[!is.na(fd$lat),]
j = j[!is.na(j$lat),]
j.cords <- j[, c("lon", "lat")]
jead(j)
head(j)
p = setup.parameters()
#Extract Cat data from groundfish survey
k = groundfish.db(DS="cat.base")
species = c('6600', '6611') #sea cucumber
j = survey.process(k, species) #make sure to set p$data.yrs
#Data Exploration
#----------------------------------
table(j$y)
#Scale data  (x - mean(x)) / sd(x) or (x-min(x))/(max(x) - min(x))
j$yr.sd <- (j$yr - min(j$yr)) / (max(j$yr) - min(j$yr)) * 10
colSums(is.na(j))
j %>% summarise_each(funs(sum(.==0)))
j = j[which(j$totwgt_sd != 0), ]
j = j[!is.na(j$lat),]
j.cords <- j[, c("lon", "lat")]
sfd <- SpatialPointsDataFrame(j.cords, data=j)
j.cnew <- spTransform(sfd, p$internal.crs)
proj4string(sfd) <- CRS(p$geog.proj)
p$geog.proj
sfd
proj4string(sfd) <- CRS('+proj=longlat +ellps=WGS84')
j.cnew <- spTransform(sfd, p$internal.crs)
j.cnew
j.cnew@coords
j.cnew$latU<- j.cnew@coords[1]
j.cnew$lonU<- j.cnew@coords[2]
j <- as.dataframe(j.cnew)
j <- as.data.frame(j.cnew)
head(j)
#Extract Cat data from groundfish survey
k = groundfish.db(DS="cat.base")
species = c('6600', '6611') #sea cucumber
j = survey.process(k, species) #make sure to set p$data.yrs
j = j[which(j$totwgt_sd != 0), ]
j = j[!is.na(j$lat),]
j.cords <- j[, c("lon", "lat")]
sfd <- SpatialPointsDataFrame(j.cords, data=j)
proj4string(sfd) <- CRS('+proj=longlat +ellps=WGS84')
j.cnew <- spTransform(sfd, p$internal.crs)
j <- as.data.frame(j.cnew)
head(j)
m1 <- totwgt_sd ~ yr.sd + lat.1 + lon.1
I1 = inla(m1, family = 'gamma', data = j, control.compute = list(dic = T, waic = T),
control.family = list(link = 'log', hyper = list(prec = list(prior = 'loggamma', param = c(1, 0.5)))))
j$yr <- as.factor(j$yr)
m1 <- totwgt_sd ~ yr + lat.1 + lon.1
I1 = inla(m1, family = 'gamma', data = j, control.compute = list(dic = T, waic = T),
control.family = list(link = 'log', hyper = list(prec = list(prior = 'loggamma', param = c(1, 0.5)))))
mu <- I1$summary.fitted.values[, "mean"]
phi <- I1$summary.hyperpar[, "mean"]
vary <- mu^2 /phi
E1 <- (j$totwgt_sd - mu / sqrt(vary))
j$E1 <- E1
myvar <- c("yr", "lat.1", "lon.1")
MyMultipanel.ggp2 (Z = j,
varx = myvar,
vary = 'E1',
ylab = 'Pearson residuals',
addSmoother = T,
addRegressionLine = F,
addHorizontalLine = T)
MyMultipanel.ggp2 (Z = j,
varx = myvar,
vary = 'E1',
ylab = 'Pearson residuals',
addSmoother = T,
addRegressionLine = F,
addHorizontalLine = T)
library(gstat)
mydata <- data.frame(E1, j$lat.1/1000, j$lon.1/1000)
coordinates(mydata) <- c('j.lat.1', 'j.lon.1')
coordinates(mydata) <- c('j$lat.1', 'j$lon.1')
head(mydata)
coordinates(mydata) <- c('j.lat.1.1000', 'j$lon.1.1000')
coordinates(mydata) <- c('j.lat.1.1000', 'j.lon.1.1000')
vario <- variogra(object = E1 ~ 1, data=mydata, cressie = T, cutoff = 10, width=  0.2)
vario <- variogram(object = E1 ~ 1, data=mydata, cressie = T, cutoff = 10, width=  0.2)
#Plot the variogram
p <- ggplot(data = vario, aes(x=dist, y=gamma)) +
geompoint() +
geom_smooth(method= 'gam', formula = y ~ s(x, bs = 'cs'), colour = 'black') +
ylim(0,1) +
theme(text = element_text(size = 15)) +
xlab('Distance(km)')+
ylab('Sample variogram')
#Plot the variogram
p <- ggplot(data = vario, aes(x=dist, y=gamma)) +
geom_point() +
geom_smooth(method= 'gam', formula = y ~ s(x, bs = 'cs'), colour = 'black') +
ylim(0,1) +
theme(text = element_text(size = 15)) +
xlab('Distance(km)')+
ylab('Sample variogram')
p
vario
head(vario)
#Plot the variogram
p <- ggplot(data = vario, aes(x=dist, y=gamma)) +
geom_point() +
geom_smooth(method= 'gam', formula = y ~ s(x, bs = 'cs'), colour = 'black') +
ylim(0,100000) +
theme(text = element_text(size = 15)) +
xlab('Distance(km)')+
ylab('Sample variogram')
p
vario <- variogram(object = E1 ~ 1, data=mydata, cressie = T, cutoff = 10, width=  0.1)
#Plot the variogram
p <- ggplot(data = vario, aes(x=dist, y=gamma)) +
geom_point() +
geom_smooth(method= 'gam', formula = y ~ s(x, bs = 'cs'), colour = 'black') +
ylim(0,100000) +
theme(text = element_text(size = 15)) +
xlab('Distance(km)')+
ylab('Sample variogram')
p
vario <- variogram(object = E1 ~ 1, data=mydata, cressie = T, cutoff = 10, width=  0.01)
#Plot the variogram
p <- ggplot(data = vario, aes(x=dist, y=gamma)) +
geom_point() +
geom_smooth(method= 'gam', formula = y ~ s(x, bs = 'cs'), colour = 'black') +
ylim(0,100000) +
theme(text = element_text(size = 15)) +
xlab('Distance(km)')+
ylab('Sample variogram')
p
vario <- variogram(object = E1 ~ 1, data=mydata, cressie = T, cutoff = 10, width=  0.09)
#Plot the variogram
p <- ggplot(data = vario, aes(x=dist, y=gamma)) +
geom_point() +
geom_smooth(method= 'gam', formula = y ~ s(x, bs = 'cs'), colour = 'black') +
ylim(0,100000) +
theme(text = element_text(size = 15)) +
xlab('Distance(km)')+
ylab('Sample variogram')
p
m1 <- totwgt_sd ~ yr + (1|lat.1) + (1|lon.1)
I1 = inla(m1, family = 'gamma', data = j, control.compute = list(dic = T, waic = T),
control.family = list(link = 'log', hyper = list(prec = list(prior = 'loggamma', param = c(1, 0.5)))))
m1 <- totwgt_sd ~ yr + f(lat.1, model ="iid") + f(lon.1, model = 'iid')
I1 = inla(m1, family = 'gamma', data = j, control.compute = list(dic = T, waic = T),
control.family = list(link = 'log', hyper = list(prec = list(prior = 'loggamma', param = c(1, 0.5)))))
mu <- I1$summary.fitted.values[, "mean"]
phi <- I1$summary.hyperpar[, "mean"]
vary <- mu^2 /phi
E1 <- (j$totwgt_sd - mu / sqrt(vary))
mu <- I1$summary.fitted.values[, "mean"]
phi <- I1$summary.hyperpar[, "mean"]
vary <- mu^2 /phi
E1 <- (j$totwgt_sd - mu / sqrt(vary))
j$E1 <- E1
myvar <- c("yr", "lat.1", "lon.1")
#Plot the pearson residuals
MyMultipanel.ggp2 (Z = j,
varx = myvar,
vary = 'E1',
ylab = 'Pearson residuals',
addSmoother = T,
addRegressionLine = F,
addHorizontalLine = T)
#Create the Variogram
mydata <- data.frame(E1, j$lat.1/1000, j$lon.1/1000)
coordinates(mydata) <- c('j.lat.1.1000', 'j.lon.1.1000')
vario <- variogram(object = E1 ~ 1, data=mydata, cressie = T, cutoff = 10, width=  0.09)
#Plot the variogram
p <- ggplot(data = vario, aes(x=dist, y=gamma)) +
geom_point() +
geom_smooth(method= 'gam', formula = y ~ s(x, bs = 'cs'), colour = 'black') +
ylim(0,100000) +
theme(text = element_text(size = 15)) +
xlab('Distance(km)')+
ylab('Sample variogram')
p
summary(I1)
plot(count(round(j$totwgt_sd, 0)))
round(j$totwgt_sd, 0)
j %>% summarise(funs(sum(j$totwgt_sd)))
j %>% summarise(funs(sum(unique(j$totwgt_sd))))
as.data.frame(table(round(j$totwgt_sd, 0))
#-----------------------------------
j = j[which(j$totwgt_sd != 0), ]
j = j[!is.na(j$lat),]
j.cords <- j[, c("lon", "lat")]
sfd <- SpatialPointsDataFrame(j.cords, data=j)
proj4string(sfd) <- CRS('+proj=longlat +ellps=WGS84')
j.cnew <- spTransform(sfd, p$internal.crs)
j <- as.data.frame(j.cnew)
j$yr <- as.factor(j$yr)
#IDW Interpolation
#----------------------------------
require(gstat)
require(sp)
data(meuse)
data(meuse.grid)
coordinates(meuse) = ~x+y
coordinates(meuse.grid) = ~x+y
gridded(meuse.grid) = TRUE
power = seq(from = 1, to = 1.6, by = 0.1)
neigh = seq(from = 4, to = 5, by = 1)
# January
results=list()
results.cv=list()
for (i in power) {
for (j in neigh) {
results[[paste0(i,"_",j)]] = idw (zinc ~ 1, meuse, meuse.grid, nmax = i, idp = j)
results.cv[[paste0(i,"_",j)]] = krige.cv (zinc ~ 1, meuse, nfold = 52)
}
}
#INLA Model
#INLA Model
#---------------------------------
m1 <- totwgt_sd ~ yr + f(lat.1, model ="iid") + f(lon.1, model = 'iid')
#m1 <- totwgt_sd ~ yr + lat.1 + lon.1
I1 = inla(m1, family = 'gamma', data = j, control.compute = list(dic = T, waic = T),
control.family = list(link = 'log', hyper = list(prec = list(prior = 'loggamma', param = c(1, 0.5)))))
summary(I1)
mu <- I1$summary.fitted.values[, "mean"]
phi <- I1$summary.hyperpar[, "mean"]
vary <- mu^2 /phi
E1 <- (j$totwgt_sd - mu / sqrt(vary))
j$E1 <- E1
myvar <- c("yr", "lat.1", "lon.1")
#Plot the pearson residuals
MyMultipanel.ggp2 (Z = j,
varx = myvar,
vary = 'E1',
ylab = 'Pearson residuals',
addSmoother = T,
addRegressionLine = F,
addHorizontalLine = T)
#Create the Variogram
mydata <- data.frame(E1, j$lat.1/1000, j$lon.1/1000)
coordinates(mydata) <- c('j.lat.1.1000', 'j.lon.1.1000')
vario <- variogram(object = E1 ~ 1, data=mydata, cressie = T, cutoff = 10, width=  0.09)
#Plot the variogram
p <- ggplot(data = vario, aes(x=dist, y=gamma)) +
geom_point() +
geom_smooth(method= 'gam', formula = y ~ s(x, bs = 'cs'), colour = 'black') +
ylim(0,100000) +
theme(text = element_text(size = 15)) +
xlab('Distance(km)')+
ylab('Sample variogram')
p
}
as.data.frame(table(round(j$totwgt_sd, 0)))
round(j$totwgt_sd, 0)
head(j)
p = setup.parameters()
library(gstat)
#Extract Cat data from groundfish survey
k = groundfish.db(DS="cat.base")
species = c('6600', '6611') #sea cucumber
j = survey.process(k, species) #make sure to set p$data.yrs
#Data Exploration
#----------------------------------
table(j$y)
as.data.frame(table(round(j$totwgt_sd, 0)))
t <- as.data.frame(table(round(j$totwgt_sd, 0)))
plot(t)
j = j[which(j$totwgt_sd != 0), ]
t <- as.data.frame(table(round(j$totwgt_sd, 0)))
plot(t)
#Data Exploration
#----------------------------------
table(j$y)
I1 = inla(m1, family = 'gamma', data = j, control.compute = list(dic = T, waic = T),
control.family = list(link = 'log', hyper = list(prec = list(prior = 'loggamma', param = c(1, 0.5)))))
m1 <- totwgt_sd ~ yr + f(lat.1, model ="rw1") + f(lon.1, model = 'rw1')
I1 = inla(m1, family = 'gamma', data = j, control.compute = list(dic = T, waic = T),
control.family = list(link = 'log', hyper = list(prec = list(prior = 'loggamma', param = c(1, 0.5)))))
p = setup.parameters()
#Extract Cat data from groundfish survey
k = groundfish.db(DS="cat.base")
species = c('6600', '6611') #sea cucumber
j = survey.process(k, species) #make sure to set p$data.yrs
#Scale data  (x - mean(x)) / sd(x) or (x-min(x))/(max(x) - min(x))
#colSums(is.na(j))
#j %>% summarise_each(funs(sum(.==0)))
j = j[which(j$totwgt_sd != 0), ]
j = j[!is.na(j$lat),]
j.cords <- j[, c("lon", "lat")]
sfd <- SpatialPointsDataFrame(j.cords, data=j)
proj4string(sfd) <- CRS('+proj=longlat +ellps=WGS84')
j.cnew <- spTransform(sfd, p$internal.crs)
j <- as.data.frame(j.cnew)
j$yr <- as.factor(j$yr)
#IDW Interpolation
#----------------------------------
require(gstat)
m1 <- totwgt_sd ~ yr + f(lat.1, model ="rw1") + f(lon.1, model = 'rw1')
I1 = inla(m1, family = 'gamma', data = j, control.compute = list(dic = T, waic = T),
control.family = list(link = 'log', hyper = list(prec = list(prior = 'loggamma', param = c(1, 0.5)))))
m1 <- totwgt_sd ~ yr + f(lat.1, model ="iid") + f(lon.1, model = 'iid')
I1 = inla(m1, family = 'gamma', data = j, control.compute = list(dic = T, waic = T),
control.family = list(link = 'log', hyper = list(prec = list(prior = 'loggamma', param = c(1, 0.5)))))
summary(I1)
mu <- I1$summary.fitted.values[, "mean"]
phi <- I1$summary.hyperpar[, "mean"]
vary <- mu^2 /phi
E1 <- (j$totwgt_sd - mu / sqrt(vary))
j$E1 <- E1
myvar <- c("yr", "lat.1", "lon.1")
#Plot the pearson residuals
MyMultipanel.ggp2 (Z = j,
varx = myvar,
vary = 'E1',
ylab = 'Pearson residuals',
addSmoother = T,
addRegressionLine = F,
addHorizontalLine = T)
summary(I1)
#Create the Variogram
mydata <- data.frame(E1, j$lat.1/1000, j$lon.1/1000)
coordinates(mydata) <- c('j.lat.1.1000', 'j.lon.1.1000')
vario <- variogram(object = E1 ~ 1, data=mydata, cressie = T, cutoff = 10, width=  0.09)
#Plot the variogram
p <- ggplot(data = vario, aes(x=dist, y=gamma)) +
geom_point() +
geom_smooth(method= 'gam', formula = y ~ s(x, bs = 'cs'), colour = 'black') +
ylim(0,100000) +
theme(text = element_text(size = 15)) +
xlab('Distance(km)')+
ylab('Sample variogram')
p
head(mydata)
#Create the Variogram
mydata <- data.frame(E1, j$lat.1/1000, j$lon.1/1000)
head(mydata)
m1 <- totwgt_sd ~ yr + f(round(lat.1, 0), model ="iid") + f(round(lon.1, 0), model = 'iid')
I1 = inla(m1, family = 'gamma', data = j, control.compute = list(dic = T, waic = T),
control.family = list(link = 'log', hyper = list(prec = list(prior = 'loggamma', param = c(0.7, 0.05)))))
summary(I1)
m1 <- totwgt_sd ~ yr + f(round(lat.1, 0), model ="rw1") + f(round(lon.1, 0), model = 'rw1')
I1 = inla(m1, family = 'gamma', data = j, control.compute = list(dic = T, waic = T),
control.family = list(link = 'log', hyper = list(prec = list(prior = 'loggamma', param = c(0.7, 0.05)))))
m1 <- totwgt_sd ~ yr + f(round(lat.1, -1), model ="rw1") + f(round(lon.1, -1), model = 'rw1')
I1 = inla(m1, family = 'gamma', data = j, control.compute = list(dic = T, waic = T),
control.family = list(link = 'log', hyper = list(prec = list(prior = 'loggamma', param = c(0.7, 0.05)))))
#INLA Model
#---------------------------------
cor1 <- round(lat.1, -1)
#INLA Model
#---------------------------------
cor1 <- round(j$lat.1, -1)
head(cor1)
#INLA Model
#---------------------------------
cor1 <- round(j$lat.1/1000, -1)
head(cor1)
m1 <- totwgt_sd ~ yr + f(round(lat.1/1000, -1), model ="rw1") + f(round(lon.1/1000, -1), model = 'rw1')
I1 = inla(m1, family = 'gamma', data = j, control.compute = list(dic = T, waic = T),
control.family = list(link = 'log', hyper = list(prec = list(prior = 'loggamma', param = c(0.7, 0.05)))))
summary(I1)
mu <- I1$summary.fitted.values[, "mean"]
phi <- I1$summary.hyperpar[, "mean"]
vary <- mu^2 /phi
